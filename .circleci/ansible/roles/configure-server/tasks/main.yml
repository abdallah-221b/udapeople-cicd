---
- name: "Add Node.js from Nodesource"
  become: true
  shell: |
    curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -

- name: "Install Node.js 13"
  become: true
  apt:
    name: ["nodejs"]
    state: latest
    update_cache: yes

- name: "Install PM2 Globally"
  npm:
    name: pm2
    global: yes


# # ###############
# ---
# # Tasks to configure the server including Node.js installation.
# # These tasks assume that variables like 'nodejs_major_version' are defined elsewhere
# # in the playbook that uses this role.
# # Example: nodejs_major_version: "20"

# # Ensure the directory for APT keyrings exists
# - name: Ensure NodeSource GPG key directory exists
#   ansible.builtin.file:
#     path: /etc/apt/keyrings
#     state: directory
#     mode: '0755'
#   become: true # This task needs root access

# # Ensure necessary prerequisite package 'gnupg' is installed for apt key management
# - name: Ensure gnupg prerequisite is installed for NodeSource key
#   ansible.builtin.apt:
#     name: gnupg
#     state: present
#     update_cache: yes
#   become: true # This task needs root access

# # Download the NodeSource GPG key
# - name: Download NodeSource GPG key
#   ansible.builtin.get_url:
#     url: https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
#     dest: /etc/apt/keyrings/nodesource.gpg
#     mode: '0644'
#     force: true # Ensure the latest key is always downloaded
#   become: true # This task needs root access to write to /etc/apt/keyrings

# # Add the NodeSource APT repository using the modern signed-by format
# - name: Add NodeSource APT repository for Node.js v{{ nodejs_major_version }}
#   ansible.builtin.apt_repository:
#     # Use the nodejs_major_version variable here
#     repo: "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_{{ nodejs_major_version }}.x nodistro main"
#     filename: nodesource # Creates /etc/apt/sources.list.d/nodesource.list
#     state: present # Ensure the repository is present
#     update_cache: yes # Automatically run apt-get update after adding the repo
#   become: true # This task needs root access

# # Install Node.js package (apt will use the version from the added repository)
# - name: Install Node.js v{{ nodejs_major_version }}
#   ansible.builtin.apt:
#     name: nodejs
#     state: latest # Installs the latest version available from the configured repository
#     update_cache: yes # Redundant after apt_repository, but ensures cache is fresh
#   become: true # This task needs root access

# # Install PM2 globally using npm
# - name: Install PM2 Globally
#   ansible.builtin.npm:
#     name: pm2
#     global: yes
#     state: latest # Or 'present' to just ensure it's installed
#   become: true # Global npm installs usually require root access
